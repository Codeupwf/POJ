//
//  main.cpp
//  1006
//
//  Created by 王芾 on 13-7-15.
//  Copyright (c) 2013年 王芾. All rights reserved.
//
/************************************************************************************************
《孙子问题(中国剩余定理)》
 《孙子算经》中有这样一个问题：
“今有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二，问物几何？”意思是，“一个数除以3余2，除以5余3，除以7余2.求适合这个条件的最小数。”
 《孙子算经》中的解法：三三数之，取数七十，与余数二相乘；五五数之，取数二十一，与余数三相乘；七七数之，取数十五，与余数二相乘。将诸乘积相加，然后减去一百零五的倍数。
这个问题称为“孙子问题”.关于孙子问题的一般解法，国际上称为“中国剩余定理”.
解法中的三个关键数70，21，15，有何妙用，有何性质呢?首先70是3除余1而5与7都除得尽的数，所以70a是3除余a，而5与7都除得尽的数，21是5除余1，而3与7都除得尽的数，所以21b是5除余b，而3与7除得尽的数。同理，15c是7除余c，3与5除得尽的数，总加起来 70a+21b+15c 是3除余a，5除余b ，7除余c的数，也就是可能答案之一，但可能不是最小的，这数加减105（105=3×5×7）仍有这样性质，可以多次减去105而得到最小的正数解。
 写成代数公式就是 （70*2 + 15*2 + 21*3）% （3*5*7） = 23
 
根据剩余定理，我把此种解法推广到有n(n为自然数）个除数对应n个余数，求最小被除数的情况。输入n个除数（除数不能互相整除）和对应的余数，计算机将输出最小被除数。
                   
对于本题，就有，(5544*p + 14421*e + 1288*i) % (28*23*33) = (result + d)
需要注意的是结果为0的时候，以及结果一定是正整数。
************************************************************************************************/

#include <iostream>

using namespace std;

static const int PI = 28 * 23 * 33;

int main(int argc, const char * argv[])
{

    int p,e,i,d;
    p = e = i = d = -1;
    
    int iCount = 0;
    
    while (cin >> p >> e >> i >> d) {
        if (-1 == p) {
            break;
        }
        
        ++iCount;
        
        int R;
        R = (5544 * p + 14421 * e + 1288 * i - d + PI) % PI;
        
        if (R == 0) {
            R = PI;
        }
        else
        {
            R = R;
        }
        
        cout << "Case " << iCount << ": the next triple peak occurs in " << R << " days." << endl;
    }
    return 0;
}

